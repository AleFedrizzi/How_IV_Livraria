<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>